#
# maze script api - templates/maze-api.erb
#
# this file was generated by puppet
# do not overwrite this file, or puppet will overwrite it again...
# so only customize this file in puppet itself
#

API_KEY_FILE="$HOMEDIR/api/key"

MESSAGE_USAGE="usage: maze api [key] [|generate]"

randomString()
{
    if [ -n "$1" ]  #  If command-line argument present,
    then            #+ then set start-string to it.
      str0="$1"
    else            #  Else use PID of script as start-string.
      str0="$$"
    fi

    POS=2  # Starting from position 2 in the string.
    LEN=8  # Extract eight characters.

    str1=$( echo "$str0" | md5sum | md5sum )
    RANDSTRING="${str1:$POS:$LEN}"
}

keyControl() {
    ACTION="$1"
    
    # if no $ACTION then echo api key
    if [ -z $ACTION ]; then

        if [ -s "$API_KEY_FILE" ]; then
            cat $API_KEY_FILE
            exit 0
        else
            echo "Api key file not found or empty in $API_KEY_FILE"
            exit 203 
        fi

    fi

    case $ACTION in
      "generate")

            if [ ! -w "$API_KEY_FILE" ]; then
                echo "Api key file not found or not writable in $API_KEY_FILE"
                exit 204
            fi
            randomString
            TIMESTAMP="`date +%s`"
            NEW_API_KEY="`echo $TIMESTAMP$RANDSTRING | md5sum | md5sum | awk '{print $1}'`"

            echo $NEW_API_KEY > $API_KEY_FILE

            FILE_CONTENT="`cat $API_KEY_FILE`"
            if [ "$FILE_CONTENT" != "$NEW_API_KEY" ]; then
                echo "Something went wrong while saving new api key..."
                exit 205
            fi

            echo $NEW_API_KEY
            exit 0
        ;;
      *)
            echo $MESSAGE_USAGE
            exit 202
        ;;
    esac
}

case $1 in
  "key")
        keyControl $2
    ;;
esac

echo $MESSAGE_USAGE
exit 201
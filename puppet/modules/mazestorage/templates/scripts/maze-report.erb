#
# maze storage report script - mazestorage/templates/scripts/maze-report.erb
#
# this file was generated by puppet
# do not overwrite this file, or puppet will overwrite it again...
# so only customize this file in puppet itself
#
###############################################################################

escapeJSON() {
    RAW=$1
    RAW=${RAW//\\/\\\\} # \.
    RAW=${RAW//\//\\\/} # /.
    RAW=${RAW//\"/\\\"} # ".
    RAW=`echo "$RAW" | sed 's/\t/    /g'`
    RAW=${RAW//    /\\t} # \t (tab)
    RAW=${RAW//
/\\\n} # \n (newline)
    RAW=${RAW//^M/\\\r} # \r (carriage return)
    RAW=${RAW//^L/\\\f} # \f (form feed)
    RAW=${RAW//^H/\\\b} # \b (backspace)
    echo "$RAW"
}

###
# @param string storage name
######
getStorageData()
{
    if [ -z "$1" ]; then
        exit 112
    fi
    STORAGE="$1"
    STORAGE_DATA=`maze storage client "$STORAGE"`
    if [ "$?" != 0 ]; then
        echo "failed to fetch storage data of \"$STORAGE\""
        exit 111
    fi
    
    echo "$STORAGE_DATA"
}

getStorageJson()
{
    if [ -z "$1" ]; then
        exit 112
    fi
    STORAGE="$1"
    STORAGE_DATA=`getStorageData "$STORAGE"`
    if [ "$?" != 0 ]; then
        echo "failed to fetch storage data of \"$STORAGE\""
        exit 111
    fi

    STORAGE_PASSWORD=`getStoragePassword "$STORAGE"`
    if [ "$?" != 0 ]; then
        echo "failed to fetch password of storage user \"$STORAGE\""
        exit 113
    fi
    STORAGE_STATUS=`echo "$STORAGE_DATA" | grep '^status: ' | awk '{print $2}'`
    STORAGE_QUOTA=`echo "$STORAGE_DATA" | grep '^size: ' | awk '{print $2}'`

    STORAGE_JSON="\"$STORAGE\": {\"password\":\"$STORAGE_PASSWORD\""
    STORAGE_JSON="${STORAGE_JSON}, \"status\":\"$STORAGE_STATUS\""
    STORAGE_JSON="${STORAGE_JSON}, \"quota\":\"$STORAGE_QUOTA\"}"

    echo "$STORAGE_JSON"
}

getStorages()
{
    STORAGES=`maze storage client`
    if [ "$?" != 0 ]; then
        echo "failed to fetch storages"
        exit 110
    fi
    
    echo "$STORAGES"
}

###
# @param string storage name
######
getStoragePassword()
{
    if [ -z "$1" ]; then
        exit 112
    fi
    STORAGE="$1"
    STORAGE_PASSWORD=`cat /etc/shadow | grep "^$STORAGE:" | awk -F':' '{print $2}'`
    if [ "$?" != 0 ]; then
        echo "failed to fetch password of storage user \"$STORAGE\""
        exit 113
    fi

    echo "$STORAGE_PASSWORD"
}

report()
{
    STORAGE_NAMES=`getStorages | grep 'name:' | awk '{print $2}'`
    if [ -z "$STORAGE_NAMES" ]; then 
        echo "{}"
        exit 0
    fi

    STORAGES_JSON=""
    for STORAGE in $STORAGE_NAMES; do
        STORAGE_JSON=`getStorageJson "$STORAGE"`
        if [ "$?" != 0 ]; then
            echo "failed to generate storage json for \"$STORAGE\""
            exit 112
        fi

        if [ ! -z "$STORAGE_JSON" ];then
            # add comma if there is a previous object
            if [ ! -z "$STORAGES_JSON" ]; then
                STORAGES_JSON="${STORAGES_JSON},"
            fi

            STORAGES_JSON="${STORAGES_JSON}${STORAGE_JSON}"
        fi
    done

    JSON="{${STORAGES_JSON}}"
    echo "$JSON"

    exit 0
}


report
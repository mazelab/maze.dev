#!/bin/bash
#
# maze vpopqmail account script - mazevpopqmail/templates/maze-account.erb
#
#
# this file was generated by puppet
# do not overwrite this file, or puppet will overwrite it again...
# so only customize this file in puppet itself
#
###############################################################################

MESSAGE_USAGE='maze vpopqmail account [$email|add|del|password|usedquota|quota|disable|enable] [$email] [$password|$quota|noquota]'

deleteAccount() {
    EMAIL="$1"

    RESULT=`$VPOPMAIL_BIN/vdeluser $EMAIL`
    STATUS=`echo "$?"`

    echo "$RESULT"
    exit $STATUS
}

disableAccount() {
    EMAIL="$1"

    RESULT=`$VPOPMAIL_BIN/vmoduser -p -s -w -i $EMAIL`
    STATUS=`echo "$?"`

    echo "$RESULT"
    exit $STATUS
}

enableAccount() {
    EMAIL="$1"

    RESULT=`$VPOPMAIL_BIN/vmoduser -x $EMAIL`
    STATUS=`echo "$?"`

    echo "$RESULT"
    exit $STATUS
}

addAccount() {
    EMAIL="$1"

    RESULT=`$VPOPMAIL_BIN/vadduser $EMAIL -r`
    STATUS=`echo "$?"`

    echo "$RESULT"
    exit $STATUS
}

getAccount() {
    EMAIL="$1"

    INFO=`$VPOPMAIL_BIN/vuserinfo $EMAIL`
    STATUS=`echo "$?"`

    echo "$INFO"
    exit $STATUS
}

getPassword() {
    EMAIL="$1"

    INFO=`$VPOPMAIL_BIN/vuserinfo -p $EMAIL`
    STATUS=`echo "$?"`

    echo "$INFO"
    exit $STATUS
}

getQuota() {
    EMAIL="$1"

    INFO=`$VPOPMAIL_BIN/vuserinfo -q $EMAIL`
    STATUS=`echo "$?"`

    echo "$INFO"
    exit $STATUS
}

setPassword() {
    EMAIL=$(echo "$1" | tr '[:upper:]' '[:lower:]')
    PASSWORD="$2"

    EMAIL_USER=$(echo "$EMAIL" | cut -d'@' -f1)
    EMAIL_DOMAIN=$(echo "$EMAIL" | cut -d'@' -f2)

    if [ -z "$EMAIL_USER" -o -z "$EMAIL_DOMAIN" -o "$EMAIL_USER" = "$EMAIL" ];then
        echo "invalid email"
        exit 240
    fi

    VPASSWD_PATH="${VPOPMAIL_HOMEDIR}/domains/${EMAIL_DOMAIN}/vpasswd"
    if [ ! -e $VPASSWD_PATH -o ! -s $VPASSWD_PATH ]; then
        echo "vpasswd file not found or accessable"
        exit 241
    fi

    CUSTOM_USER=$(awk -F: "/:${EMAIL_USER}:/ {\$2=\"${PASSWORD}\";\$8=\"\";print}" $VPASSWD_PATH | sed 's/[ ]/:/g' | sed 's/[][\.*^$/]/\\&/g')
    if [ -z "$CUSTOM_USER" ]; then
        echo "error occured while parsing password line!"
        exit 242
    fi

    sed -i "s/.*:${EMAIL_USER}:.*/${CUSTOM_USER}/" $VPASSWD_PATH

    ${VPOPMAIL_HOMEDIR}/bin/vmkpasswd $EMAIL_DOMAIN
    exit "$?"
}

setQuota() {
    EMAIL="$1"
    QUOTA="$2"

    INFO=`$VPOPMAIL_BIN/vsetuserquota $EMAIL $QUOTA`
    STATUS=`echo "$?"`

    echo "$INFO"
    exit $STATUS    
}

case $1 in
    "add")
        if [ -n "$2" ]; then
            addAccount $2
        fi
    ;;
    "delete")
        if [ -n "$2" ]; then
            deleteAccount $2
        fi
    ;;
    "password")
        if [ -n "$2" -a -n "$3" ]; then
            setPassword $2 $3
        elif [ -n "$2" -a -z "$3" ]; then
            getPassword $2
        fi
    ;;
    "quota")
        if [ -n "$2" -a -n "$3" ]; then
            setQuota $2 $3
        elif [ -n "$2" -a -z "$3" ]; then
            getQuota $2
        fi
    ;;
    "disable")
        if [ -n "$2" -a -z "$3" ]; then
            disableAccount $2
        fi
    ;;
    "enable")
        if [ -n "$2" -a -z "$3" ]; then
            enableAccount $2
        fi
    ;;
    *)
        if [ -n "$1" -a -z "$2" ]; then
            getAccount $1
        fi
    ;;
esac

echo $MESSAGE_USAGE
exit 201